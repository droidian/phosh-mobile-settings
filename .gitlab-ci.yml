include:
 - remote: 'https://gitlab.freedesktop.org/freedesktop/ci-templates/-/raw/34039cd573a2df832d465bc9e4c5f543571f5241/templates/ci-fairy.yml'

stages:
 - build
 - test
 - style-checks

default:
  # Protect CI infra from rogue jobs
  timeout: 15 minutes
  # Allow jobs to be caneled on new commits
  interruptible: true
  # Retry on infra hickups automatically
  retry:
    max: 1
    when:
      - 'api_failure'
      - 'runner_system_failure'
      - 'scheduler_failure'
      - 'stuck_or_timeout_failure'

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    # Don't trigger a branch pipeline if there is an open MR
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

variables:
  # For ci-fairy
  FDO_UPSTREAM_REPO: World/Phosh/phosh-mobile-settings
  DEBIAN_IMAGE: $CI_REGISTRY/guidog/phosh-osk-stub/debian:v0.0.2023-11-20.3
  COMMON_BUILD_OPTS: --werror

.trixie_vars: &trixie_vars
  variables:
    DIST: trixie
    BUILD_OPTS:  ${COMMON_BUILD_OPTS}

.build_step: &build_step
  script:
    - 'echo "Build opts: ${BUILD_OPTS}"'
    - meson ${BUILD_OPTS} . _build
    - meson compile -C _build

# Sanity checks of MR settings and commit logs
sanity:
  extends:
    - .fdo.ci-fairy
  stage: style-checks
  variables:
    GIT_DEPTH: "100"
  script: |
    ci-fairy check-commits --junit-xml=commit-message-junit-report.xml cifairy/main..HEAD ;
  artifacts:
    reports:
      junit: commit-message-junit-report.xml
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME'

build:native-debian-trixie:
  stage: build
  image: ${DEBIAN_IMAGE}
  before_script:
    - echo "deb http://deb.debian.org/debian/ sid main" > /etc/apt/sources.list.d/sid.list
    - apt-get -y update
    - apt-get -y -t sid build-dep .
  <<: *trixie_vars
  <<: *build_step
  artifacts:
    paths:
      - _build

format-check:
  image: ${DEBIAN_IMAGE}
  stage: style-checks
  needs: []
  script:
    - |
      git remote add target $CI_MERGE_REQUEST_PROJECT_URL.git
      echo "Fetching MR target branch $CI_MERGE_REQUEST_TARGET_BRANCH_NAME from $CI_MERGE_REQUEST_PROJECT_URL"
      git fetch target "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
      git fetch --deepen=100 origin HEAD
      merge_base=$(git merge-base "target/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" HEAD)
      if [ -z "$merge_base" ]; then
        echo "Could't determine merge base"
        exit 1
      fi
      echo "Merge base: $merge_base"
      ./.gitlab-ci/check-style.py --dry-run --sha $merge_base
  allow_failure: true
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME'

check-po:
  stage: test
  image: ${DEBIAN_IMAGE}
  before_script:
    - eatmydata apt-get -y update
    - eatmydata apt-get -y install intltool gettext
  <<: *trixie_vars
  needs: []
  script:
    - tools/check-po
